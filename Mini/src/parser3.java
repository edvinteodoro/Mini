
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Apr 08 19:34:05 CST 2018
//----------------------------------------------------

import java_cup.runtime.*;
import javax.swing.JTextPane;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Apr 08 19:34:05 CST 2018
  */
public class parser3 extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser3() {super();}

  /** Constructor which sets the default scanner. */
  public parser3(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser3(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\027\000\002\002\004\000\002\012\006\000\002\011" +
    "\004\000\002\005\005\000\002\004\005\000\002\014\005" +
    "\000\002\014\004\000\002\002\005\000\002\013\004\000" +
    "\002\013\003\000\002\013\003\000\002\007\004\000\002" +
    "\017\002\000\002\007\006\000\002\007\003\000\002\020" +
    "\002\000\002\007\005\000\002\010\003\000\002\010\004" +
    "\000\002\021\002\000\002\003\007\000\002\006\005\000" +
    "\002\015\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\004\004\004\001\002\000\004\006\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\004\022\056\001\002\000\004\010\052\001\002\000" +
    "\006\016\012\020\016\001\002\000\004\006\007\001\002" +
    "\000\004\005\040\001\002\000\012\005\ufff8\016\012\017" +
    "\ufff8\020\016\001\002\000\006\005\ufff7\017\ufff7\001\002" +
    "\000\006\014\022\021\020\001\002\000\006\014\022\021" +
    "\ufff0\001\002\000\012\005\ufffb\016\ufffb\017\ufffb\020\ufffb" +
    "\001\002\000\004\021\035\001\002\000\004\006\024\001" +
    "\002\000\004\015\034\001\002\000\004\022\025\001\002" +
    "\000\004\007\uffee\001\002\000\004\007\027\001\002\000" +
    "\004\012\031\001\002\000\004\015\uffed\001\002\000\004" +
    "\023\032\001\002\000\004\013\033\001\002\000\004\015" +
    "\uffeb\001\002\000\006\014\uffec\021\uffec\001\002\000\012" +
    "\005\ufffc\016\ufffc\017\ufffc\020\ufffc\001\002\000\004\021" +
    "\uffef\001\002\000\006\005\ufff9\017\ufff9\001\002\000\004" +
    "\002\000\001\002\000\010\016\012\017\044\020\016\001" +
    "\002\000\004\017\047\001\002\000\006\005\ufffa\017\ufffa" +
    "\001\002\000\012\005\ufff3\016\ufff2\017\ufff3\020\ufff2\001" +
    "\002\000\006\016\012\020\016\001\002\000\006\005\ufff1" +
    "\017\ufff1\001\002\000\012\005\ufff6\016\ufff5\017\ufff6\020" +
    "\ufff5\001\002\000\006\016\012\020\016\001\002\000\006" +
    "\005\ufff4\017\ufff4\001\002\000\004\022\054\001\002\000" +
    "\006\016\uffff\020\uffff\001\002\000\004\011\055\001\002" +
    "\000\006\016\ufffd\020\ufffd\001\002\000\004\007\057\001" +
    "\002\000\012\010\ufffe\016\ufffe\017\ufffe\020\ufffe\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\004\012\004\001\001\000\006\005\007\011" +
    "\010\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\004\052\001\001\000\010\002\014\013" +
    "\012\014\013\001\001\000\004\005\040\001\001\000\002" +
    "\001\001\000\010\002\014\013\036\014\013\001\001\000" +
    "\002\001\001\000\006\006\016\010\020\001\001\000\006" +
    "\006\016\010\035\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\022\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\025\001\001\000\002\001\001\000" +
    "\004\015\027\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\002\014\007\042\013\041\014\013\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\044" +
    "\001\001\000\010\002\014\013\045\014\013\001\001\000" +
    "\002\001\001\000\004\017\047\001\001\000\010\002\014" +
    "\013\050\014\013\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser3$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser3$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser3$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



        Escritorio escritorio;        
        public parser3(lexico2 lex,Escritorio escritorio) { 
            super(lex);
            this.escritorio=escritorio;
	}       

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser3$actions {
  private final parser3 parser;

  /** Constructor */
  CUP$parser3$actions(parser3 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser3$do_action(
    int                        CUP$parser3$act_num,
    java_cup.runtime.lr_parser CUP$parser3$parser,
    java.util.Stack            CUP$parser3$stack,
    int                        CUP$parser3$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser3$result;

      /* select the action based on the action number */
      switch (CUP$parser3$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ruta ::= ERUTA PATH ERUTAC 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("ruta",11, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // archivos ::= EARCHIVO dentroArchivo EARCHIVOC 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("archivos",4, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // dentroArchivo ::= ENOMBRE TEXTO NT$2 ENOMBREC ruta 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-3)).value;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("dentroArchivo",1, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-4)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$2 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
                 parser.escritorio.inserNodoTree(a); 
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("NT$2",15, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // numArchivos ::= archivos numArchivos 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("numArchivos",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // numArchivos ::= archivos 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("numArchivos",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // cuerpoC ::= EPAQUETEC NT$1 cuerpo 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NT$1 ::= 
            {
              Object RESULT =null;
parser.escritorio.regresarNodo(); 
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("NT$1",14, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cuerpoC ::= EPAQUETEC 
            {
              Object RESULT =null;
		parser.escritorio.regresarNodo(); 
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cuerpoC ::= cuerpo EPAQUETEC NT$0 cuerpo 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NT$0 ::= 
            {
              Object RESULT =null;
parser.escritorio.regresarNodo();
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("NT$0",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cuerpoC ::= cuerpo EPAQUETEC 
            {
              Object RESULT =null;
		 parser.escritorio.regresarNodo(); 
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cuerpo ::= paquete 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo ::= archs 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo ::= archs cuerpo 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // paquete ::= EPAQUETE nombre cuerpoC 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("paquete",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // archs ::= EARCHS EARCHSC 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("archs",10, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // archs ::= EARCHS numArchivos EARCHSC 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("archs",10, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // creacion ::= ECREACION TEXTO ECREACIONC 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("creacion",2, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // nombre ::= ENOMBRE TEXTO ENOMBREC 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		parser.escritorio.inserNodoTree(e);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("nombre",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // cabeza ::= nombre creacion 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("cabeza",7, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= EPROYECTO cabeza cuerpo EPROYECTOC 
            {
              Object RESULT =null;

              CUP$parser3$result = parser.getSymbolFactory().newSymbol("inicio",8, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		RESULT = start_val;
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser3$parser.done_parsing();
          return CUP$parser3$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

