
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Apr 08 13:45:00 CST 2018
//----------------------------------------------------

import java_cup.runtime.*;
import javax.swing.JTextPane;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Apr 08 13:45:00 CST 2018
  */
public class parser2 extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser2() {super();}

  /** Constructor which sets the default scanner. */
  public parser2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\037\000\002\002\004\000\002\017\002\000\002\020" +
    "\002\000\002\012\010\000\002\011\004\000\002\005\005" +
    "\000\002\004\005\000\002\021\002\000\002\014\006\000" +
    "\002\022\002\000\002\014\005\000\002\023\002\000\002" +
    "\002\006\000\002\013\004\000\002\013\003\000\002\013" +
    "\003\000\002\007\004\000\002\024\002\000\002\007\006" +
    "\000\002\007\003\000\002\025\002\000\002\007\005\000" +
    "\002\010\003\000\002\010\004\000\002\026\002\000\002" +
    "\027\002\000\002\003\010\000\002\030\002\000\002\006" +
    "\006\000\002\031\002\000\002\015\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\065\000\004\004\004\001\002\000\004\006\000\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\004\006\010\001\002\000\004\022\066\001\002\000" +
    "\004\010\062\001\002\000\006\016\013\020\017\001\002" +
    "\000\004\006\ufff6\001\002\000\004\005\uffff\001\002\000" +
    "\012\005\ufff3\016\013\017\ufff3\020\017\001\002\000\006" +
    "\005\ufff2\017\ufff2\001\002\000\006\014\ufffa\021\ufff8\001" +
    "\002\000\004\021\044\001\002\000\004\014\024\001\002" +
    "\000\006\014\024\021\uffeb\001\002\000\004\021\042\001" +
    "\002\000\004\006\uffe6\001\002\000\004\006\027\001\002" +
    "\000\004\015\041\001\002\000\004\022\030\001\002\000" +
    "\004\007\uffe9\001\002\000\004\007\032\001\002\000\004" +
    "\012\uffe8\001\002\000\004\012\035\001\002\000\004\015" +
    "\uffe7\001\002\000\004\023\036\001\002\000\004\013\uffe4" +
    "\001\002\000\004\013\040\001\002\000\004\015\uffe3\001" +
    "\002\000\006\014\uffe5\021\uffe5\001\002\000\012\005\ufff9" +
    "\016\ufff9\017\ufff9\020\ufff9\001\002\000\004\021\uffea\001" +
    "\002\000\012\005\ufff7\016\ufff7\017\ufff7\020\ufff7\001\002" +
    "\000\006\005\ufff4\017\ufff4\001\002\000\004\005\047\001" +
    "\002\000\004\002\ufffe\001\002\000\004\006\010\001\002" +
    "\000\010\016\013\017\054\020\017\001\002\000\004\017" +
    "\057\001\002\000\006\005\ufff5\017\ufff5\001\002\000\012" +
    "\005\uffee\016\uffed\017\uffee\020\uffed\001\002\000\006\016" +
    "\013\020\017\001\002\000\006\005\uffec\017\uffec\001\002" +
    "\000\012\005\ufff1\016\ufff0\017\ufff1\020\ufff0\001\002\000" +
    "\006\016\013\020\017\001\002\000\006\005\uffef\017\uffef" +
    "\001\002\000\004\022\064\001\002\000\006\016\ufffd\020" +
    "\ufffd\001\002\000\004\011\065\001\002\000\006\016\ufffb" +
    "\020\ufffb\001\002\000\004\007\067\001\002\000\012\010" +
    "\ufffc\016\ufffc\017\ufffc\020\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\065\000\004\012\004\001\001\000\004\017\006\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\005\010" +
    "\011\011\001\001\000\002\001\001\000\004\004\062\001" +
    "\001\000\010\002\015\013\013\014\014\001\001\000\004" +
    "\023\047\001\001\000\004\020\045\001\001\000\010\002" +
    "\015\013\044\014\014\001\001\000\002\001\001\000\006" +
    "\021\020\022\017\001\001\000\002\001\001\000\006\006" +
    "\021\010\022\001\001\000\006\006\021\010\042\001\001" +
    "\000\002\001\001\000\004\030\024\001\001\000\004\003" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\030\001\001\000\002\001\001\000\004\027\032\001" +
    "\001\000\004\015\033\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\036\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\050\001\001\000\012" +
    "\002\015\007\052\013\051\014\014\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\054\001\001\000\010" +
    "\002\015\013\055\014\014\001\001\000\002\001\001\000" +
    "\004\024\057\001\001\000\010\002\015\013\060\014\014" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



        Escritorio escritorio;        
        public parser2(lexico2 lex,Escritorio escritorio) { 
            super(lex);
            this.escritorio=escritorio;
	}       

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser2$actions {
  private final parser2 parser;

  /** Constructor */
  CUP$parser2$actions(parser2 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser2$result;

      /* select the action based on the action number */
      switch (CUP$parser2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ruta ::= ERUTA PATH NT$10 ERUTAC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		parser.escritorio.contenidoArchivo.add("</ruta>\n"); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("ruta",11, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$10 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
parser.escritorio.contenidoArchivo.add("<ruta>"+e); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$10",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // archivos ::= EARCHIVO NT$9 dentroArchivo EARCHIVOC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		parser.escritorio.contenidoArchivo.add("</archivo>\n");
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("archivos",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$9 ::= 
            {
              Object RESULT =null;
parser.escritorio.contenidoArchivo.add("<archivo>");
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$9",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // dentroArchivo ::= ENOMBRE TEXTO NT$7 ENOMBREC NT$8 ruta 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-4)).value;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("dentroArchivo",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
parser.escritorio.contenidoArchivo.add("</nombre>\n"); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$8",21, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$7 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
parser.escritorio.contenidoArchivo.add("<nombre>"+a); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$7",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // numArchivos ::= archivos numArchivos 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("numArchivos",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // numArchivos ::= archivos 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("numArchivos",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // cuerpoC ::= EPAQUETEC NT$6 cuerpo 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NT$6 ::= 
            {
              Object RESULT =null;
parser.escritorio.contenidoArchivo.add("</paquete>\n"); parser.escritorio.quitar();
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$6",19, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cuerpoC ::= EPAQUETEC 
            {
              Object RESULT =null;
		parser.escritorio.contenidoArchivo.add("</paquete>\n"); parser.escritorio.quitar(); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // cuerpoC ::= cuerpo EPAQUETEC NT$5 cuerpo 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$5 ::= 
            {
              Object RESULT =null;
parser.escritorio.contenidoArchivo.add("</paquete>\n"); parser.escritorio.quitar();
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$5",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // cuerpoC ::= cuerpo EPAQUETEC 
            {
              Object RESULT =null;
		parser.escritorio.contenidoArchivo.add("</paquete>\n"); parser.escritorio.quitar(); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpoC",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // cuerpo ::= paquete 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cuerpo ::= archs 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cuerpo ::= archs cuerpo 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cuerpo",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // paquete ::= EPAQUETE NT$4 nombre cuerpoC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paquete",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NT$4 ::= 
            {
              Object RESULT =null;
parser.escritorio.contenidoArchivo.add("<paquete>\n");
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$4",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // archs ::= EARCHS NT$3 EARCHSC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		parser.escritorio.contenidoArchivo.add("</archs>\n");parser.escritorio.addFileList(parser.escritorio.nomActual,1); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("archs",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$3 ::= 
            {
              Object RESULT =null;
 parser.escritorio.contenidoArchivo.add("<archs>\n");parser.escritorio.addFileList(parser.escritorio.nomActual,0); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$3",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // archs ::= EARCHS NT$2 numArchivos EARCHSC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		parser.escritorio.contenidoArchivo.add("</archs>\n");parser.escritorio.addFileList(parser.escritorio.nomActual,1);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("archs",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$2 ::= 
            {
              Object RESULT =null;
 parser.escritorio.contenidoArchivo.add("<archs>\n"); parser.escritorio.addFileList(parser.escritorio.nomActual,0); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$2",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // creacion ::= ECREACION TEXTO ECREACIONC 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		parser.escritorio.contenidoArchivo.add("<creacion>"+e+"</creacion>\n");
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("creacion",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // nombre ::= ENOMBRE TEXTO ENOMBREC 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		parser.escritorio.contenidoArchivo.add("<nombre>"+e+"</nombre>\n"); parser.escritorio.addNodo(0,e); parser.escritorio.nomActual=e;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("nombre",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cabeza ::= nombre creacion 
            {
              Object RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("cabeza",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inicio ::= EPROYECTO NT$0 cabeza cuerpo NT$1 EPROYECTOC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("inicio",8, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
parser.escritorio.contenidoArchivo.add("</proyecto>"); parser.escritorio.escribir(); 
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$1",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
parser.escritorio.contenidoArchivo.add("<proyecto>\n");
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("NT$0",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = start_val;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser2$parser.done_parsing();
          return CUP$parser2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

